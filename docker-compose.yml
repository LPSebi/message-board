version: "3.8"
services:
  next:
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile.next
    # ports:
    #   - "3000:3000"
    depends_on:
      - socket
      - redis
      - db
  label:
    - "traefik.http.routers.whoami.rule=Host(`localhost`)"

  socket:
    restart: unless-stopped
    build:
      context: ./
      dockerfile: Dockerfile.socket
    ports:
      - 5000:5000

    depends_on:
      - db
      - redis
  redis:
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    volumes:
      - redis:/data

  db:
    image: mysql:latest
    command: mysqld --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: message-board
      MYSQL_PORT: 3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/my.cnf:/etc/mysql/my.cnf

  reverse-proxy:
    image: traefik:v3.0
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

volumes:
  mysql_data:
    driver: local
  redis:
    driver: local
